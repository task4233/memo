(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{258:function(t,r,a){"use strict";a.r(r);var e=a(37),s=Object(e.a)({},function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"abc017-c-ハイスコア"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abc017-c-ハイスコア","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://atcoder.jp/contests/abc017/tasks/abc017_3",target:"_blank",rel:"noopener noreferrer"}},[t._v("ABC017 C - ハイスコア"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"概要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概要","aria-hidden":"true"}},[t._v("#")]),t._v(" 概要")]),t._v(" "),a("p",[t._v("$N$個の遺跡と$M$種類の宝石がある."),a("br"),t._v("\n遺跡$i$を探索すると, [$l_i$, $r_i$]の種類の宝石を$1$つずつ入手し, スコア$s_i$を獲得する."),a("br"),t._v("\nしかし, 全種類の宝石を入手すると, 獲得したスコアは$0$になる."),a("br"),t._v("\nこのとき, 獲得できるスコアの最大値を求めよ.")]),t._v(" "),a("h2",{attrs:{id:"解法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解法","aria-hidden":"true"}},[t._v("#")]),t._v(" 解法")]),t._v(" "),a("p",[t._v("方針としては, 全体から必要のない部分を減じるという流れになる."),a("br"),t._v("\nこれは, いもす法で解ける."),a("br"),t._v("\nまず, 全ての遺跡のスコア等を全て設定する."),a("br"),t._v("\n次に, いもすテーブルをシミュレーションして求める."),a("br"),t._v("\n最後に, そのテーブルの最小値を求めて, 全体から減じれば良い.")]),t._v(" "),a("h2",{attrs:{id:"提出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提出","aria-hidden":"true"}},[t._v("#")]),t._v(" 提出")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://atcoder.jp/contests/abc017/submissions/4262900",target:"_blank",rel:"noopener noreferrer"}},[t._v("ABC017-C"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("以上."),a("br"),t._v("\nお疲れ様でした.")]),t._v(" "),a("p",[t._v("セグ木でも解けるらしい.")])])},[],!1,null,null,null);r.default=s.exports}}]);