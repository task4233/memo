(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{255:function(n,a,r){"use strict";r.r(a);var _=r(0),t=Object(_.a)({},(function(){var n=this,a=n.$createElement,r=n._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("h1",{attrs:{id:"ghidra勉強会"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ghidra勉強会"}},[n._v("#")]),n._v(" Ghidra勉強会")]),n._v(" "),r("h2",{attrs:{id:"seccamp事前課題"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#seccamp事前課題"}},[n._v("#")]),n._v(" Seccamp事前課題")]),n._v(" "),r("ul",[r("li",[n._v("0x001013c1からの関数がmain\n"),r("ul",[r("li",[n._v("entryから呼び出しているので")])])])]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v('\nundefined8 FUN_001013c1(int param_1,undefined8 *param_2)\n\n{\n  undefined *__s2;\n  int iVar1;\n  char *__s1;\n  undefined local_138 [272];\n  void *local_28;\n  size_t local_20;\n  \n  if (param_1 < 2) {\n    printf("Usage: %s <plaintext>",*param_2);\n                    /* WARNING: Subroutine does not return */\n    exit(1);\n  }\n  puts((char *)param_2[1]);\n  local_20 = strlen((char *)param_2[1]);\n  local_28 = malloc(local_20);\n  FUN_00101195(local_138,"seccamp2020",DAT_00104060 & 0xffffffff,0x3b);\n  __s2 = PTR_DAT_00104068;\n  __s1 = (char *)FUN_00101285(local_138,param_2[1],local_28,local_20);\n  iVar1 = strcmp(__s1,__s2);\n  if (iVar1 == 0) {\n    puts("Correct!");\n  }\n  else {\n    puts("Wrong...");\n  }\n  free(local_28);\n  return 0;\n}\n\n\n')])])]),r("ul",[r("li",[n._v("読みやすくするために再命名")])]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v('\nint main(int argc,char *argv)\n\n{\n  undefined *__s2;\n  int iVar1;\n  char *__s1;\n  undefined local_138 [272];\n  void *buf;\n  size_t size;\n  \n  if (argc < 2) {\n    printf("Usage: %s <plaintext>",*(undefined8 *)argv);\n                    /* WARNING: Subroutine does not return */\n    exit(1);\n  }\n  puts(*(char **)(argv + 8));\n  size = strlen(*(char **)(argv + 8));\n  buf = malloc(size);\n  FUN_00101195(local_138,"seccamp2020",DAT_00104060 & 0xffffffff,0x3b);\n  __s2 = PTR_DAT_00104068;\n  __s1 = (char *)FUN_00101285(local_138,*(undefined8 *)(argv + 8),buf,size);\n  iVar1 = strcmp(__s1,__s2);\n  if (iVar1 == 0) {\n    puts("Correct!");\n  }\n  else {\n    puts("Wrong...");\n  }\n  free(buf);\n  return 0;\n}\n\n\n')])])]),r("ul",[r("li",[n._v("FUN_00101195の中身を見る")])]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("\nvoid FUN_00101195(long param_1,long param_2,int param_3,char param_4)\n\n{\n  undefined uVar1;\n  int local_14;\n  uint local_10;\n  int local_c;\n  \n  *(undefined4 *)(param_1 + 0x100) = 0;\n  *(undefined4 *)(param_1 + 0x104) = 0;\n  local_c = 0;\n  while (local_c < 0x100) {\n    *(char *)(param_1 + local_c) = param_4 + (char)local_c;\n    local_c = local_c + 1;\n  }\n  local_10 = 0;\n  local_14 = 0;\n  while (local_14 < 0x41) {\n    local_10 = (int)*(char *)(param_2 + local_14 % param_3) +\n               (int)*(char *)(param_1 + local_14) + local_10 & 0xff;\n    uVar1 = *(undefined *)(param_1 + local_14);\n    *(undefined *)(param_1 + local_14) = *(undefined *)(param_1 + (int)local_10);\n    *(undefined *)(param_1 + (int)local_10) = uVar1;\n    local_14 = local_14 + 1;\n  }\n  return;\n}\n\n")])])]),r("ul",[r("li",[r("code",[n._v("*(undefined4 *)(param_1 + 0x100) = 0;")]),n._v("とか"),r("code",[n._v("*(undefined4 *)(param_1 + 0x104) = 0;")]),n._v("が構造体アクセスっぽい")]),n._v(" "),r("li",[n._v("param1に対してauto Create Structureを実施")]),n._v(" "),r("li",[n._v("Edit Data Typeで修正\n"),r("ul",[r("li",[n._v("サイズ等はアセンブリを読めば分かる")]),n._v(" "),r("li",[n._v("char[0x100], int, int")])])]),n._v(" "),r("li",[n._v("local_10とlocal_14は変数として使ってるっぽいので, iとjと命名")]),n._v(" "),r("li",[n._v("whileの中の処理は, swap(str[i], str[j])っぽい")])]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("\nvoid FUN_00101195(CTX *param_1,long param_2,int param_3,char param_4)\n\n{\n  int j;\n  uint i;\n  int str_idx;\n  char tmp;\n  \n  param_1->i = 0;\n  param_1->j = 0;\n  str_idx = 0;\n  while (str_idx < 0x100) {\n    param_1->str[str_idx] = param_4 + (char)str_idx;\n    str_idx = str_idx + 1;\n  }\n  i = 0;\n  j = 0;\n  while (j < 0x41) {\n    i = (int)*(char *)(param_2 + j % param_3) + (int)param_1->str[j] + i & 0xff;\n    /* swap(str[i], str[j]); */\n    tmp = param_1->str[j];\n    param_1->str[j] = param_1->str[(int)i];\n    param_1->str[(int)i] = tmp;\n    j = j + 1;\n  }\n  return;\n}\n\n")])])]),r("ul",[r("li",[n._v("もう一方のFUN_00101285も調査")])]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("\nlong FUN_00101285(CTX *param_1,long param_2,long param_3,ulong param_4)\n\n{\n  int idx;\n  uint j;\n  uint i;\n  char tmp;\n  \n  i = param_1->i;\n  j = param_1->j;\n  if (param_3 == 0) {\n                    /* WARNING: Subroutine does not return */\n    exit(1);\n  }\n  idx = 0;\n  while ((ulong)(long)idx < param_4) {\n    i = i + 1 & 0xff;\n    j = j + (int)param_1->str[(int)i] & 0xff;\n                    /* swap(str[i], str[j]) */\n    tmp = param_1->str[(int)i];\n    param_1->str[(int)i] = param_1->str[(int)j];\n    param_1->str[(int)j] = tmp;\n                    /* xor */\n    *(byte *)(param_3 + idx) =\n         *(byte *)(param_2 + idx) ^\n         param_1->str[(int)((int)param_1->str[(int)j] + (int)param_1->str[(int)i] & 0xff)];\n    idx = idx + 1;\n  }\n  param_1->i = i;\n  param_1->j = j;\n  return param_3;\n}\n\n")])])]),r("ul",[r("li",[n._v("xorを取っているので, RC4の亜種っぽい")]),n._v(" "),r("li",[n._v("純粋なRC4との違いは, swap前のadd処理")]),n._v(" "),r("li",[n._v("そのため, よくあるRC4を多少編集すれば良い")])])])}),[],!1,null,null,null);a.default=t.exports}}]);